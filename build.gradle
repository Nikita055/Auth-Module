// The dependencies.gradle file contains the dependencies for this project
// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.3"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.20"
        classpath 'android.arch.navigation:navigation-safe-args-gradle-plugin:1.0.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


allprojects {
    apply plugin: 'maven-publish'

}


/**
 * For versioning and artifactory publish
 */

def versionPropsFile = file('versions.properties')

Properties versionProps = new Properties()
if (!versionPropsFile.exists()) {
    versionProps['VERSION_MAJOR'] = "1"
    versionProps['VERSION_MINOR'] = "0"
    versionProps['VERSION_PATCH'] = "0"
    versionProps['VERSION_BUILD'] = "1"
    versionProps.store(versionPropsFile.newWriter(), null)
}

if (versionPropsFile.canRead()) {
    versionProps.load(new FileInputStream(versionPropsFile))

    //versionProps['VERSION_PATCH'] = (versionProps['VERSION_PATCH'].toInteger() + 1).toString()
    versionProps['VERSION_BUILD'] = (versionProps['VERSION_BUILD'].toInteger() + 1).toString()

    versionProps.store(versionPropsFile.newWriter(), null)
} else {
    throw new FileNotFoundException("Version Properties file not found!!!")
}

ext.versionProps = versionProps
def currentVersionName = "${versionProps['VERSION_MAJOR']}.${versionProps['VERSION_MINOR']}.${versionProps['VERSION_PATCH']}.${versionProps['VERSION_BUILD']}"
def currentVersionCode = (100000000 * versionProps['VERSION_MAJOR'].toInteger()) \
                 + (1000000 * versionProps['VERSION_MINOR'].toInteger()) \
                 + (10000 * versionProps['VERSION_PATCH'].toInteger()) \
                 + versionProps['VERSION_BUILD'].toInteger()

ext.currentVersionCode = currentVersionCode
ext.currentVersionName = currentVersionName

/**
 * For artifactory publish
 */


project('libsignup') {
    publishing {
        publications {
            aar(MavenPublication) {
                //groupId = group
                groupId = "com.wama.libsignup"
                artifactId = project.getName()
                version = currentVersionName
                // Tell maven to prepare the generated "*.aar" file for publishing
                artifact("$buildDir/outputs/aar/${project.getName()}-${currentVersionName}-release.aar")
            }
        }
    }


    
}

